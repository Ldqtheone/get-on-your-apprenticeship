{"version":3,"sources":["hogwarts.png","components/StudentCard.js","components/ListCharacters.js","App.js","services/ApiServices.js","reportWebVitals.js","index.js"],"names":["StudentCard","props","useState","isFlipped","setIsFlipped","onClick","Card","bg","text","className","Img","variant","src","image","Header","name","Body","Text","house","patronus","ancestry","actor","alive","ListCharacters","Container","Row","characters","map","character","index","Col","xs","sm","defaultProps","App","state","allStudents","randomResponse","fetch","then","res","json","catch","err","data","setState","getAllStudentsByHouse","this","getAllStudents","logo","alt","handleRandomStudent","filterByHouse","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.32bc7b26.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/hogwarts.1cf84289.png\";","import React, {useState} from 'react';\r\nimport ReactCardFlip from \"react-card-flip\";\r\nimport Card from \"react-bootstrap/Card\";\r\n\r\n/**\r\n *Component StudentCard\r\n */\r\nexport default function StudentCard(props) {\r\n    const [isFlipped, setIsFlipped] = useState(false);\r\n    return (\r\n        <div onClick={() => {\r\n            setIsFlipped(!isFlipped)\r\n        }}>\r\n            <ReactCardFlip isFlipped={isFlipped}>\r\n                <Card\r\n                    bg={\"dark\"}\r\n                    text={'white'}\r\n                    className={\"mb-2\"}\r\n                >\r\n                    <Card.Img variant=\"top\" src={props.image} />\r\n                    <Card.Header>{props.name}</Card.Header>\r\n                </Card>\r\n\r\n                <Card\r\n                    bg={\"dark\"}\r\n                    text={'white'}\r\n                    className={\"mb-2\"}\r\n                >\r\n                    <Card.Header>Name : {props.name}</Card.Header>\r\n                    <Card.Body>\r\n                        <Card.Text>\r\n                            House : {props.house}\r\n                        </Card.Text>\r\n                        <Card.Text>\r\n                            Patronus : {props.patronus !== \"\" ? props.patronus : \"No Patronus\"}\r\n                        </Card.Text>\r\n                        <Card.Text>\r\n                            Ancestry : {props.ancestry !== \"\" ? props.ancestry : \"No Ancestry\"}\r\n                        </Card.Text>\r\n                        <Card.Text>\r\n                            Actor : {props.actor}\r\n                        </Card.Text>\r\n                        <Card.Text>\r\n                            Alive : {!props.alive ? \"Dead\" : \"Alive\"}\r\n                        </Card.Text>\r\n                    </Card.Body>\r\n                </Card>\r\n            </ReactCardFlip></div>\r\n    );\r\n}","import PropTypes from 'prop-types'\r\nimport React from 'react';\r\nimport StudentCard from \"./StudentCard\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\n\r\n/**\r\n *Component ListCharacters\r\n *\r\n */\r\nexport default function ListCharacters(props) {\r\n    function displayCharacters() {\r\n        return props.characters.map((character, index) => {\r\n            return (\r\n                <Col xs={12} sm={6} key={index}>\r\n                    <StudentCard {...character}/>\r\n                </Col>\r\n            );\r\n        });\r\n    }\r\n    return (\r\n        <Container>\r\n            <Row>\r\n                {displayCharacters()}\r\n            </Row>\r\n        </Container>\r\n    );\r\n}\r\n\r\nListCharacters.propTypes = {\r\n    characters: PropTypes.array.isRequired\r\n}\r\n\r\nListCharacters.defaultProps = {\r\n    characters: []\r\n}","import React, {Component} from 'react';\r\nimport logo from './hogwarts.png';\r\nimport './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Col from \"react-bootstrap/Col\";\r\nimport StudentCard from \"./components/StudentCard\";\r\nimport {getAllStudents, getAllStudentsByHouse, getRandomStudent} from \"./services/ApiServices\";\r\nimport ListCharacters from \"./components/ListCharacters\";\r\n\r\nclass App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            allStudents: [],\r\n            randomResponse: {}\r\n        };\r\n    }\r\n\r\n    handleRandomStudent() {\r\n        getRandomStudent().then(data => {\r\n            this.setState({randomResponse: data})\r\n        })\r\n    }\r\n\r\n    filterByHouse(house){\r\n        getAllStudentsByHouse(house).then(data => {\r\n            this.setState({allStudents: data})\r\n        })\r\n    }\r\n\r\n    getAllStudents(){\r\n        getAllStudents().then(data => {\r\n            this.setState({allStudents: data})\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n       this.getAllStudents()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"App\">\r\n                <header className=\"App-header\">\r\n                    <img src={logo} className=\"App-logo\" alt=\"logo\"/>\r\n\r\n                    {this.state.randomResponse &&\r\n                    <Col xs={12} sm={6}>\r\n                        <StudentCard {...this.state.randomResponse}/>\r\n                    </Col>\r\n                    }\r\n                    <button onClick={() => {\r\n                        this.handleRandomStudent()\r\n                    }}>\r\n                        Choose your student for the cup\r\n                    </button>\r\n                    <p>\r\n                        Here is a list of all students:\r\n                    </p>\r\n                    <p>\r\n                        <button onClick={() => {\r\n                            this.filterByHouse(\"Gryffindor\")\r\n                        }}>\r\n                            Gryffindor\r\n                        </button>\r\n                        <button onClick={() => {\r\n                            this.filterByHouse(\"Slytherin\")\r\n                        }}>\r\n                            Slytherin\r\n                        </button>\r\n                        <button onClick={() => {\r\n                            this.filterByHouse(\"Hufflepuff\")\r\n                        }}>\r\n                            Hufflepuff\r\n                        </button>\r\n                        <button onClick={() => {\r\n                            this.filterByHouse(\"Ravenclaw\")\r\n                        }}>\r\n                            Ravenclaw\r\n                        </button>\r\n                        <button onClick={() => {\r\n                            this.getAllStudents()\r\n                        }}>\r\n                            All Houses\r\n                        </button>\r\n                    </p>\r\n                    <ListCharacters characters={this.state.allStudents}/>\r\n                </header>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;","/**\r\n * Service API\r\n */\r\nexport function getAllStudents() {\r\n    return fetch(\"https://frozen-ravine-59943.herokuapp.com/real/students\")\r\n        .then(res => res.json())\r\n        .catch(err => err);\r\n}\r\n\r\nexport function getAllStudentsByHouse(house) {\r\n    return fetch(\"https://frozen-ravine-59943.herokuapp.com/real/students?house=\"+house)\r\n        .then(res => res.json())\r\n        .catch(err => err);\r\n}\r\n\r\nexport function getRandomStudent() {\r\n    return fetch(\"https://frozen-ravine-59943.herokuapp.com/real/randomstudent\")\r\n        .then(res => res.json())\r\n        .catch(err => err);\r\n}","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}