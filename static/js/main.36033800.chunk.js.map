{"version":3,"sources":["hogwarts.png","components/StudentCard.js","components/ListCharacters.js","App.js","services/ApiServices.js","reportWebVitals.js","index.js"],"names":["StudentCard","props","useState","isFlipped","setIsFlipped","onClick","Card","bg","text","className","Header","style","width","height","overflow","borderRadius","margin","Image","src","image","alt","name","alive","icon","faDizzy","Body","Text","house","hogwartsStudent","hogwartsStaff","patronus","ancestry","actor","ListCharacters","Container","Row","characters","map","character","index","Col","xs","sm","lg","defaultProps","App","state","allStudents","randomResponse","selectedFilter","availableFilter","fetch","then","res","json","catch","err","data","setState","filter","this","loadAllStudents","logo","handleRandomStudent","DropdownButton","title","Dropdown","Item","eventKey","handleFilter","selected","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.36033800.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/hogwarts.1cf84289.png\";","import React, {useState} from 'react';\r\nimport ReactCardFlip from \"react-card-flip\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Image from \"react-bootstrap/Image\";\r\nimport {faDizzy} from \"@fortawesome/free-regular-svg-icons/faDizzy\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faSchool} from \"@fortawesome/free-solid-svg-icons/faSchool\";\r\nimport {faUserGraduate} from \"@fortawesome/free-solid-svg-icons/faUserGraduate\";\r\n\r\n/**\r\n *Component StudentCard\r\n */\r\nexport default function StudentCard(props) {\r\n    const [isFlipped, setIsFlipped] = useState(false);\r\n    return (\r\n        <div onClick={() => {\r\n            setIsFlipped(!isFlipped)\r\n        }}>\r\n            <ReactCardFlip isFlipped={isFlipped}>\r\n                <Card\r\n                    bg={\"dark\"}\r\n                    text={'white'}\r\n                    className={\"mb-2\"}\r\n                >\r\n                    <Card.Header>\r\n                        <div style={{\r\n                            width: 150,\r\n                            height: 150,\r\n                            overflow: 'hidden',\r\n                            borderRadius: 10,\r\n                            margin: \"auto\"\r\n                        }}>\r\n                            <Image src={props.image} alt={\"face\"} style={{width: 150, height: \"auto\"}}/>\r\n\r\n                        </div>\r\n                        {props.name}\r\n                        {!props.alive &&\r\n                        <FontAwesomeIcon icon={faDizzy}/>\r\n                        }\r\n                    </Card.Header>\r\n                </Card>\r\n\r\n                <Card\r\n                    bg={\"dark\"}\r\n                    text={'white'}\r\n                    className={\"mb-2\"}\r\n                >\r\n                    <Card.Header>Name : {props.name}</Card.Header>\r\n                    <Card.Body>\r\n                        <Card.Text>\r\n                            <p> House : {props.house}</p>\r\n                            <p> School's status : {props.hogwartsStudent ? \"student\" : props.hogwartsStaff ? \"staff\" : \"Not in Hogwarts\"}</p>\r\n                            <p> Patronus : {props.patronus !== \"\" ? props.patronus : \"No Patronus\"}</p>\r\n                            <p> Ancestry : {props.ancestry !== \"\" ? props.ancestry : \"No Ancestry\"}</p>\r\n                            <p> Actor : {props.actor}</p>\r\n                        </Card.Text>\r\n                    </Card.Body>\r\n                </Card>\r\n            </ReactCardFlip></div>\r\n    );\r\n}","import PropTypes from 'prop-types'\r\nimport React from 'react';\r\nimport StudentCard from \"./StudentCard\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\n\r\n/**\r\n *Component ListCharacters\r\n *\r\n */\r\nexport default function ListCharacters(props) {\r\n    function displayCharacters() {\r\n        return props.characters.map((character, index) => {\r\n            return (\r\n                <Col xs={12} sm={6} lg={4} key={index}>\r\n                    <StudentCard {...character}/>\r\n                </Col>\r\n            );\r\n        });\r\n    }\r\n    return (\r\n        <Container>\r\n            <Row>\r\n                {displayCharacters()}\r\n            </Row>\r\n        </Container>\r\n    );\r\n}\r\n\r\nListCharacters.propTypes = {\r\n    characters: PropTypes.array.isRequired\r\n}\r\n\r\nListCharacters.defaultProps = {\r\n    characters: []\r\n}","import React, {Component} from 'react';\r\nimport logo from './hogwarts.png';\r\nimport './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Col from \"react-bootstrap/Col\";\r\nimport StudentCard from \"./components/StudentCard\";\r\nimport {getAllStudents, getAllStudentsByHouse, getRandomStudent} from \"./services/ApiServices\";\r\nimport ListCharacters from \"./components/ListCharacters\";\r\nimport DropdownButton from \"react-bootstrap/DropdownButton\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\n\r\n\r\nclass App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            allStudents: [],\r\n            randomResponse: null,\r\n            selectedFilter: \"All\"\r\n        };\r\n        this.availableFilter = ['All', 'Gryffindor', 'Slytherin', 'Hufflepuff', 'Ravenclaw']\r\n    }\r\n\r\n    handleRandomStudent() {\r\n        getRandomStudent().then(data => {\r\n            this.setState({randomResponse: data})\r\n        })\r\n    }\r\n\r\n    handleFilter(filter) {\r\n        this.setState({selectedFilter: filter})\r\n        if (filter === \"All\") {\r\n            this.loadAllStudents()\r\n        } else {\r\n            getAllStudentsByHouse(filter).then(data => {\r\n                this.setState({allStudents: data})\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    loadAllStudents() {\r\n        getAllStudents().then(data => {\r\n            this.setState({allStudents: data})\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadAllStudents()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"App\">\r\n                <header className=\"App-header\">\r\n                    <img src={logo} className=\"App-logo\" alt=\"logo\"/>\r\n\r\n                    {this.state.randomResponse &&\r\n                    <Col xs={12} sm={6}>\r\n                        <StudentCard {...this.state.randomResponse}/>\r\n                    </Col>\r\n                    }\r\n                    <button onClick={() => {\r\n                        this.handleRandomStudent()\r\n                    }}>\r\n                        Choose your student for the cup\r\n                    </button>\r\n                    <p>\r\n                        Here is a list of all students:\r\n                    </p>\r\n                    <DropdownButton\r\n                        key={this.state.selectedFilter}\r\n                        title={this.state.selectedFilter}\r\n                    >\r\n                        {this.availableFilter.map((filter) =>\r\n                            <Dropdown.Item\r\n                                eventKey={filter}\r\n                                onClick={() => this.handleFilter(filter)}\r\n                                selected={this.state.selectedFilter === filter}>{filter}\r\n                            </Dropdown.Item>\r\n                        )}\r\n                    </DropdownButton>\r\n\r\n                    <ListCharacters characters={this.state.allStudents}/>\r\n                </header>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;","/**\r\n * Service API\r\n */\r\nexport function getAllStudents() {\r\n    return fetch(\"https://frozen-ravine-59943.herokuapp.com/real/students\")\r\n        .then(res => res.json())\r\n        .catch(err => err);\r\n}\r\n\r\nexport function getAllStudentsByHouse(house) {\r\n    return fetch(\"https://frozen-ravine-59943.herokuapp.com/real/students?house=\"+house)\r\n        .then(res => res.json())\r\n        .catch(err => err);\r\n}\r\n\r\nexport function getRandomStudent() {\r\n    return fetch(\"https://frozen-ravine-59943.herokuapp.com/real/randomstudent\")\r\n        .then(res => res.json())\r\n        .catch(err => err);\r\n}","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}