{"version":3,"sources":["hogwarts.png","components/StudentCard.js","components/ListCharacters.js","components/FilterSelector.js","App.js","services/ApiServices.js","reportWebVitals.js","index.js"],"names":["StudentCard","props","useState","isFlipped","setIsFlipped","onClick","Card","bg","text","className","Header","style","width","height","overflow","borderRadius","margin","Image","src","image","alt","name","alive","icon","faSkullCrossbones","Body","Text","house","hogwartsStudent","hogwartsStaff","patronus","ancestry","actor","ListCharacters","Container","Row","characters","map","character","index","Col","xs","sm","lg","defaultProps","FilterSelector","DropdownButton","title","selectedFilter","filters","filter","Dropdown","Item","eventKey","handleClick","selected","App","state","allStudents","randomResponse","isLoading","availableFilter","fetch","then","res","json","catch","err","data","setState","this","loadAllStudents","loadFilteredStudents","logo","Button","handleRandomStudent","handleFilter","Spinner","animation","variant","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.817f5af9.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/hogwarts.1cf84289.png\";","import React, {useState} from 'react';\r\nimport ReactCardFlip from \"react-card-flip\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Image from \"react-bootstrap/Image\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faSkullCrossbones} from \"@fortawesome/free-solid-svg-icons/faSkullCrossbones\";\r\n\r\n/**\r\n *Component StudentCard\r\n */\r\nexport default function StudentCard(props) {\r\n    const [isFlipped, setIsFlipped] = useState(false);\r\n    return (\r\n        <div onClick={() => {\r\n            setIsFlipped(!isFlipped)\r\n        }}>\r\n            <ReactCardFlip isFlipped={isFlipped}>\r\n                <Card\r\n                    bg={\"dark\"}\r\n                    text={'white'}\r\n                    className={\"mb-2\"}\r\n                >\r\n                    <Card.Header>\r\n                        <div style={{\r\n                            width: 150,\r\n                            height: 150,\r\n                            overflow: 'hidden',\r\n                            borderRadius: 10,\r\n                            margin: \"auto\"\r\n                        }}>\r\n                            <Image src={props.image} alt={\"face\"} style={{width: 150, height: \"auto\"}}/>\r\n\r\n                        </div>\r\n                        {props.name}\r\n                        {!props.alive &&\r\n                        <FontAwesomeIcon icon={faSkullCrossbones}/>\r\n                        }\r\n                    </Card.Header>\r\n                </Card>\r\n\r\n                <Card\r\n                    bg={\"dark\"}\r\n                    text={'white'}\r\n                    className={\"mb-2\"}\r\n                >\r\n                    <Card.Header>Name : {props.name}</Card.Header>\r\n                    <Card.Body>\r\n                        <Card.Text>\r\n                            <p> House : {props.house}</p>\r\n                            <p> School's status : {props.hogwartsStudent ? \"student\" : props.hogwartsStaff ? \"staff\" : \"Not in Hogwarts\"}</p>\r\n                            <p> Patronus : {props.patronus !== \"\" ? props.patronus : \"Unknown\"}</p>\r\n                            <p> Ancestry : {props.ancestry !== \"\" ? props.ancestry : \"Unknown\"}</p>\r\n                            <p> Actor : {props.actor}</p>\r\n                        </Card.Text>\r\n                    </Card.Body>\r\n                </Card>\r\n            </ReactCardFlip>\r\n        </div>\r\n    );\r\n}","import PropTypes from 'prop-types'\r\nimport React, {useState} from 'react';\r\nimport StudentCard from \"./StudentCard\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\n\r\n/**\r\n *Component ListCharacters\r\n */\r\nexport default function ListCharacters(props) {\r\n    function displayCharacters() {\r\n        return props.characters.map((character, index) => {\r\n            return (\r\n                <Col xs={12} sm={6} lg={4} key={index}>\r\n                    <StudentCard {...character}/>\r\n                </Col>\r\n            );\r\n        });\r\n    }\r\n    return (\r\n        <Container className=\"mt-5\">\r\n            <Row>\r\n                {displayCharacters()}\r\n            </Row>\r\n        </Container>\r\n    );\r\n}\r\n\r\nListCharacters.propTypes = {\r\n    characters: PropTypes.array.isRequired\r\n}\r\n\r\nListCharacters.defaultProps = {\r\n    characters: []\r\n}","import React from 'react';\r\nimport DropdownButton from \"react-bootstrap/DropdownButton\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\nimport PropTypes from 'prop-types'\r\n\r\n/**\r\n * Component FilterSelector\r\n */\r\nexport default function FilterSelector(props) {\r\n    return (\r\n        <DropdownButton\r\n            key={props.selectedFilter}\r\n            title={props.selectedFilter}\r\n        >\r\n            {props.filters.map((filter) => {\r\n                return <Dropdown.Item eventKey={filter}\r\n                                      onClick={() => props.handleClick(filter)}\r\n                                      selected={props.selectedFilter === filter}>{filter}\r\n                </Dropdown.Item>\r\n            })\r\n            }\r\n        </DropdownButton>\r\n    );\r\n}\r\n\r\nFilterSelector.propTypes = {\r\n    filters: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n    handleClick: PropTypes.func.isRequired,\r\n    selectedFilter: PropTypes.string\r\n}\r\n\r\nFilterSelector.defaultProps = {\r\n    filters: [\"All\"]\r\n}","import React, {Component} from 'react';\r\nimport logo from './hogwarts.png';\r\nimport './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Col from \"react-bootstrap/Col\";\r\nimport StudentCard from \"./components/StudentCard\";\r\nimport {getAllStudents, getAllStudentsByHouse, getRandomStudent} from \"./services/ApiServices\";\r\nimport ListCharacters from \"./components/ListCharacters\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport FilterSelector from \"./components/FilterSelector\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\n\r\nclass App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            allStudents: [],\r\n            randomResponse: null,\r\n            selectedFilter: \"All\",\r\n            isLoading: false,\r\n        };\r\n        this.availableFilter = ['All', 'Gryffindor', 'Slytherin', 'Hufflepuff', 'Ravenclaw']\r\n    }\r\n\r\n    handleRandomStudent() {\r\n        getRandomStudent().then(data => {\r\n            this.setState({randomResponse: data})\r\n        })\r\n    }\r\n\r\n    handleFilter(filter) {\r\n        this.setState({selectedFilter: filter})\r\n        if (filter === \"All\") {\r\n            this.loadAllStudents()\r\n        } else {\r\n            this.loadFilteredStudents(filter)\r\n        }\r\n    }\r\n\r\n    loadAllStudents() {\r\n        this.setState({isLoading: true})\r\n        getAllStudents().then(data => {\r\n            this.setState({allStudents: data}, () => {\r\n                this.setState({isLoading: false})\r\n            })\r\n        })\r\n    }\r\n\r\n    loadFilteredStudents(filter) {\r\n        this.setState({isLoading: true})\r\n        getAllStudentsByHouse(filter).then(data => {\r\n            this.setState({allStudents: data}, () => {\r\n                this.setState({isLoading: false})\r\n            })\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadAllStudents()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Container className=\"App\">\r\n                <header className=\"App-header\">\r\n                    <img src={logo} className=\"App-logo\" alt=\"logo\"/>\r\n                </header>\r\n                <body>\r\n\r\n                <Container className=\"mt-5\">\r\n\r\n                    {this.state.randomResponse &&\r\n                    <Row className=\"justify-content-center\">\r\n                        <Col xs={12} sm={6}>\r\n                            <StudentCard {...this.state.randomResponse}/>\r\n                        </Col>\r\n                    </Row>\r\n                    }\r\n                    <Row className=\"justify-content-center\">\r\n                        <Button onClick={() => {\r\n                            this.handleRandomStudent()\r\n                        }}>\r\n                            Choose your student for the cup\r\n                        </Button>\r\n                    </Row>\r\n\r\n                </Container>\r\n                <Container className=\"mt-5\">\r\n                    <Row>\r\n                        <Col>\r\n                            <h2>Here is a list of all Characters:</h2>\r\n                        </Col>\r\n                        <Col>\r\n                            <FilterSelector\r\n                                handleClick={(filter) => {\r\n                                    this.handleFilter(filter)\r\n                                }}\r\n                                filters={this.availableFilter}\r\n                                selectedFilter={this.state.selectedFilter}/>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n\r\n                {this.state.isLoading ?\r\n                    <Spinner animation=\"border\" variant=\"primary\" style={{margin: \"20px 50%\"}}/>\r\n                    :\r\n                    <ListCharacters characters={this.state.allStudents}/>\r\n                }\r\n\r\n                </body>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;","/**\r\n * Service API\r\n */\r\nexport function getAllStudents() {\r\n    return fetch(\"https://frozen-ravine-59943.herokuapp.com/real/students\")\r\n        .then(res => res.json())\r\n        .catch(err => err);\r\n}\r\n\r\nexport function getAllStudentsByHouse(house) {\r\n    return fetch(\"https://frozen-ravine-59943.herokuapp.com/real/students?house=\"+house)\r\n        .then(res => res.json())\r\n        .catch(err => err);\r\n}\r\n\r\nexport function getRandomStudent() {\r\n    return fetch(\"https://frozen-ravine-59943.herokuapp.com/real/randomstudent\")\r\n        .then(res => res.json())\r\n        .catch(err => err);\r\n}","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}